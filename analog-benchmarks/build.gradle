plugins {
    id 'java'
    id 'jacoco'
}

group 'org.column4jBench'
version '0.0.1'

targetCompatibility = JavaVersion.VERSION_21
sourceCompatibility = JavaVersion.VERSION_21

def previewJvmArgs = Arrays.asList(preview_jvm_args.split(' '))

repositories {
    mavenCentral()
}

sourceSets {
    jmh {
        java.srcDirs = ['src/main/java']
        resources.srcDirs = ['src/main/resources']
        compileClasspath += sourceSets.main.runtimeClasspath
    }
}

tasks.register('jmh', JavaExec) {
    dependsOn jmhClasses
    mainClass = 'org.openjdk.jmh.Main'
    jvmArgs = previewJvmArgs
    classpath = sourceSets.jmh.compileClasspath + sourceSets.jmh.runtimeClasspath
}

dependencies {
    implementation group: 'org.apache.arrow', name: 'arrow-vector', version: lib_arrow_version
    implementation group: 'org.apache.arrow', name: 'arrow-memory', version: lib_arrow_version
    implementation group: 'org.apache.arrow', name: 'arrow-memory-netty', version: lib_arrow_version
    implementation group: 'org.apache.arrow', name: 'arrow-algorithm', version: lib_arrow_version

    implementation group: 'org.openjdk.jmh', name: 'jmh-core', version: lib_jmh_version
    implementation group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: lib_jmh_version
    implementation group: 'org.openjdk.jmh', name: 'jmh-core', version: lib_jmh_version
    annotationProcessor group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: lib_jmh_version
}

tasks.compileJava {
    options.compilerArgs.addAll(previewJvmArgs)
}

tasks.compileJmhJava {
    options.compilerArgs.addAll(previewJvmArgs)
}

classes.finalizedBy(jmhClasses)
